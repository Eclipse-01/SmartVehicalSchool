C251 COMPILER V5.60.0,  servo                                                              01/11/24  21:35:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE servo
OBJECT MODULE PLACED IN .\Out_File\servo.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\UserLibraries\servo.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED)
                    - BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;
                    -..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries) DEBUG PRINT(.\Out_File\servo.lst) TAB
                    -S(2) OBJECT(.\Out_File\servo.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,Öð·É¿Æ¼¼
    4           * All rights reserved.
    5           * ¼¼ÊõÌÖÂÛQQÈº£ºÒ»Èº£º179029047(ÒÑÂú)  ¶þÈº£º244861897(ÒÑÂú)  ÈýÈº£º824575535
    6           *
    7           * ÒÔÏÂËùÓÐÄÚÈÝ°æÈ¨¾ùÊôÖð·É¿Æ¼¼ËùÓÐ£¬Î´¾­ÔÊÐí²»µÃÓÃÓÚÉÌÒµÓÃÍ¾£¬
    8           * »¶Ó­¸÷Î»Ê¹ÓÃ²¢´«²¥±¾³ÌÐò£¬ÐÞ¸ÄÄÚÈÝÊ±±ØÐë±£Áô???·É¿Æ¼¼µÄ°æÈ¨ÉùÃ÷¡£
    9           *
   10           * @file          main
   11           * @company   ³É¶¼Öð·É¿Æ¼¼ÓÐÏÞ¹«Ë¾
   12           * @author        Öð·É¿Æ¼¼(QQ790875685)
   13           * @version       ²é¿´docÄÚversionÎÄ¼þ °æ±¾ËµÃ÷
   14           * @Software    MDK FOR C251 V5.60
   15           * @Target core   STC32F12K
   16           * @Taobao      https://seekfree.taobao.com/
   17           * @date          2020-12-18
   18           ********************************************************************************************************
             -************/
   19          
   20          #include "headfile.h"
   21          #include "servo.h"
   22          
   23          /*
   24           * ¹ØÓÚÄÚºËÆµÂÊµÄÉè¶¨£¬¿ÉÒÔ²é¿´board.hÎÄ¼þ
   25           * ÔÚboard_initÖÐ,ÒÑ¾­½«P54Òý½ÅÉèÖÃÎª¸´Î»
   26           * Èç¹ûÐèÒªÊ¹ÓÃP54Òý½Å,¿ÉÒÔÔÚboard.cÎÄ¼þÖÐµÄboard_init()º¯ÊýÖÐÉ¾³ýSET_P54_RESRT¼´¿É
   27           */
   28          
   29          // Ìí¼ÓÈ«¾Ö±äÁ¿
   30          uint16 ServoAngle;
   31          
   32          /**
   33           *@brief  ¶æ»ú³õÊ¼»¯
   34           *@note   Òªµ÷½Ú³õÊ¼»¯µÄÎ»ÖÃ£¬¿ÉÒÔÐÞ¸ÄCenterµÄÖµ
   35           */
   36          void servo_init(void)
   37          {
   38   1          uint32 duty = (uint32)(Servo_Center * 10000 / 20); // Center = 1 ´ú±íÊä³ö1msµÄPWMÐÅºÅ
   39   1          pwm_init(PWMB_CH3_P33, 50, duty);            // PWMÆµÂÊÊÇ50Hz£¬¼´20ms¡£
   40   1      }
   41          
   42          /**
   43           * @brief ½«¶æ»úÉèÖÃµ½Ö¸¶¨½Ç¶È¡£
   44           *
   45           * ´Ëº¯Êý½ÓÊÜÒ»¸öÒÔ¶ÈÎªµ¥Î»µÄ½Ç¶È£¬²¢½«¶æ»úµ÷Õûµ½ÏàÓ¦µÄÎ»ÖÃ¡£
   46           * ½Ç¶ÈÓ¦ÔÚ¶æ»úÖ§³ÖµÄÓÐÐ§·¶Î§ÄÚ£¬¼ûMaxAngleµÄºê¶¨Òå¡£
   47           *
   48           * @param angle ÒªÉèÖÃµÄ¶æ»ú½Ç¶È£¬ÒÔ¶ÈÎªµ¥Î»¡£
   49           */
   50          void servo_set_position(uint16 angle)
   51          {
   52   1          uint32 pulseWide = Servo_Center;
   53   1          if (angle > Servo_MaxAngle)
   54   1          {
C251 COMPILER V5.60.0,  servo                                                              01/11/24  21:35:44  PAGE 2   

   55   2              angle = Servo_MaxAngle;
   56   2          }
   57   1          if (angle < -Servo_MaxAngle)
   58   1          {
   59   2              angle = -Servo_MaxAngle;
   60   2          }
   61   1          pulseWide += angle * (2 / 180); // Õâ¸öËãÊ½µÄº¬Òå£ºÃ¿1ms¶ÔÓ¦½Ç¶ÈÊÇ90¡ã£¬ÔÙÓÃ½Ç¶È³ËÒÔ(1ms/90¡ã)µÃµ½¶ÔÓ
             -¦µÄmsÊý£¬ÔÙ¼ÓÉÏCenterµÃµ½×îÖÕµÄmsÊý
   62   1          pwm_duty(PWMB_CH3_P33, pulseWide);
   63   1          ServoAngle = angle;
   64   1      }
   65          
   66          /**
   67           * @brief »ñÈ¡µ±Ç°¶æ»úµÄ½Ç¶È£¬ÒÔ¶ÈÎªµ¥Î»¡£
   68           */
   69          uint16 servo_get_angle(void)
   70          {
   71   1          return ServoAngle;
   72   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       105     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        12     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
